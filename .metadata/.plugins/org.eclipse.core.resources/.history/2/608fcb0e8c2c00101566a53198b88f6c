<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.5.0_16) on Thu Mar 12 12:01:05 EDT 2009 -->
<TITLE>
WiiRemoteJ
</TITLE>

<META NAME="keywords" CONTENT="wiiremotej.WiiRemoteJ class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="WiiRemoteJ";
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../wiiremotej/WiiRemoteExtensionFactory.html" title="class in wiiremotej"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../wiiremotej/WiiRemoteMouse.html" title="class in wiiremotej"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?wiiremotej/WiiRemoteJ.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="WiiRemoteJ.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
wiiremotej</FONT>
<BR>
Class WiiRemoteJ</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>wiiremotej.WiiRemoteJ</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>WiiRemoteJ</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Library for connecting to and interacting with a Nintendo (R) Wii Remote (TM) and Balance Board (TM) via Bluetooth (R).
 See accompanying LICENSE for trademark information.<br><br>
 Note that Bluetooth must be available on class loading, as the library connects to the local device at this time.
 WiiRemoteJ also contains the Logger from the Java logging API. The logger is named "wiiremotej" (for those wishing to utilize
 the logging API). Note that a ConsoleHandler is provided to output messages to the standard output (System.out). If you remove this handler, then you will cease to
 receive messages on the console from this handler, even if you call one of the setConsoleLogging methods. By default, only error (warning and severe) messages are output
 to the console.<br>
 <br>
 Note that the bulk of the information you will need to program using WiiRemoteJ is located in the header of the WiiRemote class in the API docs.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../wiiremotej/WiiRemote.html" title="class in wiiremotej"><CODE>WiiRemote</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#ALL">ALL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates all devices.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#BALANCE_BOARD">BALANCE_BOARD</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates a Balance Board device.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#WII_REMOTE">WII_REMOTE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates a Wii Remote device.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#WiiRemoteJ()">WiiRemoteJ</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#bytesToInt(byte[])">bytesToInt</A></B>(byte[]&nbsp;bytes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a byte array (big endian) to an int.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#bytesToInt(byte[], boolean)">bytesToInt</A></B>(byte[]&nbsp;bytes,
           boolean&nbsp;bigEndian)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a byte array to an int.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#bytesToLong(byte[])">bytesToLong</A></B>(byte[]&nbsp;bytes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a byte array (big endian) to a long.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#bytesToLong(byte[], boolean)">bytesToLong</A></B>(byte[]&nbsp;bytes,
            boolean&nbsp;bigEndian)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a byte array to a long.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../wiiremotej/BalanceBoard.html" title="class in wiiremotej">BalanceBoard</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#connectToBalanceBoard(java.lang.String)">connectToBalanceBoard</A></B>(java.lang.String&nbsp;bluetoothAddress)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects to the BalanceBoard with the specified bluetooth address.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../wiiremotej/WiiRemote.html" title="class in wiiremotej">WiiRemote</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#connectToRemote(java.lang.String)">connectToRemote</A></B>(java.lang.String&nbsp;bluetoothAddress)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects to the Wii Remote with the specified bluetooth address.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../wiiremotej/BalanceBoard.html" title="class in wiiremotej">BalanceBoard</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findBalanceBoard()">findBalanceBoard</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for a BalanceBoard and pairs with it via Bluetooth.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findDevice(int)">findDevice</A></B>(int&nbsp;deviceType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for a WiiDevice and pairs with it via Bluetooth.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findDevices(wiiremotej.event.WiiDeviceDiscoveryListener, int)">findDevices</A></B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
            int&nbsp;deviceType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for WiiDevices indefinitely, until stopFind() is called.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findDevices(wiiremotej.event.WiiDeviceDiscoveryListener, int, int)">findDevices</A></B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
            int&nbsp;deviceType,
            int&nbsp;numDevices)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for WiiDevices until the given number of devices are found or until until stopFind() is called.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../wiiremotej/WiiRemote.html" title="class in wiiremotej">WiiRemote</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findRemote()">findRemote</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for a WiiRemote and pairs with it via Bluetooth.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findRemotes(wiiremotej.event.WiiDeviceDiscoveryListener)">findRemotes</A></B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for WiiRemotes indefinitely, until stopFind() is called.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#findRemotes(wiiremotej.event.WiiDeviceDiscoveryListener, int)">findRemotes</A></B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
            int&nbsp;numRemotes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for WiiRemotes until the given number are found or until stopFind() is called.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#intToBytes(int)">intToBytes</A></B>(int&nbsp;intNum)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts an int to a byte array (big endian).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#intToBytes(int, boolean)">intToBytes</A></B>(int&nbsp;intNum,
           boolean&nbsp;bigEndian)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts an int to a byte array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#isFindInProgress()">isFindInProgress</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if a find operation is in progress; otherwise <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#longToBytes(int)">longToBytes</A></B>(int&nbsp;longNum)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a long to a byte array (big endian).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#longToBytes(int, boolean)">longToBytes</A></B>(int&nbsp;longNum,
            boolean&nbsp;bigEndian)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts a long to a byte array.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#printHexArray(byte[])">printHexArray</A></B>(byte[]&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#printHexArray(byte[], int, int)">printHexArray</A></B>(byte[]&nbsp;b,
              int&nbsp;startIndex,
              int&nbsp;len)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#setConsoleLoggingAll()">setConsoleLoggingAll</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Outputs all messages to the console by default.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#setConsoleLoggingErrors()">setConsoleLoggingErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Limits the types of messages output to the console by default to error (warning and severe) messages only.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#setConsoleLoggingOff()">setConsoleLoggingOff</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Outputs no messages to the console by default.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#stopFind()">stopFind</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cancels a search for multiple devices initiated by findDevices(...).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/WiiRemoteJ.html#toHexString(int)">toHexString</A></B>(int&nbsp;b)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="WII_REMOTE"><!-- --></A><H3>
WII_REMOTE</H3>
<PRE>
public static final int <B>WII_REMOTE</B></PRE>
<DL>
<DD>Indicates a Wii Remote device.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#wiiremotej.WiiRemoteJ.WII_REMOTE">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="BALANCE_BOARD"><!-- --></A><H3>
BALANCE_BOARD</H3>
<PRE>
public static final int <B>BALANCE_BOARD</B></PRE>
<DL>
<DD>Indicates a Balance Board device.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#wiiremotej.WiiRemoteJ.BALANCE_BOARD">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="ALL"><!-- --></A><H3>
ALL</H3>
<PRE>
public static final int <B>ALL</B></PRE>
<DL>
<DD>Indicates all devices.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#wiiremotej.WiiRemoteJ.ALL">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="WiiRemoteJ()"><!-- --></A><H3>
WiiRemoteJ</H3>
<PRE>
public <B>WiiRemoteJ</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="intToBytes(int)"><!-- --></A><H3>
intToBytes</H3>
<PRE>
public static byte[] <B>intToBytes</B>(int&nbsp;intNum)</PRE>
<DL>
<DD>Converts an int to a byte array (big endian). Convenience for intToBytes(intNum, true).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>intNum</CODE> - an int to convert.
<DT><B>Returns:</B><DD>the int as a byte array of length 4.</DL>
</DD>
</DL>
<HR>

<A NAME="intToBytes(int, boolean)"><!-- --></A><H3>
intToBytes</H3>
<PRE>
public static byte[] <B>intToBytes</B>(int&nbsp;intNum,
                                boolean&nbsp;bigEndian)</PRE>
<DL>
<DD>Converts an int to a byte array.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>intNum</CODE> - an int to convert.<DD><CODE>bigEndian</CODE> - if <code>true</code>, the byte order will be big endian; if <code>false</code>, the byte order will be little endian.
<DT><B>Returns:</B><DD>the int as a byte array of length 4.</DL>
</DD>
</DL>
<HR>

<A NAME="longToBytes(int)"><!-- --></A><H3>
longToBytes</H3>
<PRE>
public static byte[] <B>longToBytes</B>(int&nbsp;longNum)</PRE>
<DL>
<DD>Converts a long to a byte array (big endian). Convenience for longToBytes(longNum, true).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>longNum</CODE> - a long to convert.
<DT><B>Returns:</B><DD>the long as a byte array of length 8.</DL>
</DD>
</DL>
<HR>

<A NAME="longToBytes(int, boolean)"><!-- --></A><H3>
longToBytes</H3>
<PRE>
public static byte[] <B>longToBytes</B>(int&nbsp;longNum,
                                 boolean&nbsp;bigEndian)</PRE>
<DL>
<DD>Converts a long to a byte array.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>longNum</CODE> - a long to convert.<DD><CODE>bigEndian</CODE> - if <code>true</code>, the byte order will be big endian; if <code>false</code>, the byte order will be little endian.
<DT><B>Returns:</B><DD>the long as a byte array of length 8.</DL>
</DD>
</DL>
<HR>

<A NAME="bytesToInt(byte[])"><!-- --></A><H3>
bytesToInt</H3>
<PRE>
public static int <B>bytesToInt</B>(byte[]&nbsp;bytes)
                      throws java.lang.IllegalArgumentException</PRE>
<DL>
<DD>Converts a byte array (big endian) to an int. Convenience for bytesToInt(bytes, true).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bytes</CODE> - a byte array to convert.
<DT><B>Returns:</B><DD>the byte array as an int.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if the byte array is longer than 4 bytes or is 0 bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="bytesToInt(byte[], boolean)"><!-- --></A><H3>
bytesToInt</H3>
<PRE>
public static int <B>bytesToInt</B>(byte[]&nbsp;bytes,
                             boolean&nbsp;bigEndian)
                      throws java.lang.IllegalArgumentException</PRE>
<DL>
<DD>Converts a byte array to an int.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bytes</CODE> - a byte array to convert.<DD><CODE>bigEndian</CODE> - if <code>true</code>,the input is considered to be big endian; if <code>false</code>, the input is considered to be little endian.
<DT><B>Returns:</B><DD>the byte array as an int.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if the byte array is longer than 4 bytes or is 0 bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="bytesToLong(byte[])"><!-- --></A><H3>
bytesToLong</H3>
<PRE>
public static long <B>bytesToLong</B>(byte[]&nbsp;bytes)
                        throws java.lang.IllegalArgumentException</PRE>
<DL>
<DD>Converts a byte array (big endian) to a long. Convenience for bytesToLong(bytes, true).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bytes</CODE> - a byte array to convert.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if the byte array is longer than 8 bytes or is 0 bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="bytesToLong(byte[], boolean)"><!-- --></A><H3>
bytesToLong</H3>
<PRE>
public static long <B>bytesToLong</B>(byte[]&nbsp;bytes,
                               boolean&nbsp;bigEndian)
                        throws java.lang.IllegalArgumentException</PRE>
<DL>
<DD>Converts a byte array to a long.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bytes</CODE> - a byte array to convert.<DD><CODE>bigEndian</CODE> - if <code>true</code>,the input is considered to be big endian; if <code>false</code>, the input is considered to be little endian.
<DT><B>Returns:</B><DD>the byte array as an long.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if the byte array is longer than 8 bytes or is 0 bytes.</DL>
</DD>
</DL>
<HR>

<A NAME="toHexString(int)"><!-- --></A><H3>
toHexString</H3>
<PRE>
public static java.lang.String <B>toHexString</B>(int&nbsp;b)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="printHexArray(byte[], int, int)"><!-- --></A><H3>
printHexArray</H3>
<PRE>
public static void <B>printHexArray</B>(byte[]&nbsp;b,
                                 int&nbsp;startIndex,
                                 int&nbsp;len)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="printHexArray(byte[])"><!-- --></A><H3>
printHexArray</H3>
<PRE>
public static void <B>printHexArray</B>(byte[]&nbsp;b)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="connectToRemote(java.lang.String)"><!-- --></A><H3>
connectToRemote</H3>
<PRE>
public static <A HREF="../wiiremotej/WiiRemote.html" title="class in wiiremotej">WiiRemote</A> <B>connectToRemote</B>(java.lang.String&nbsp;bluetoothAddress)
                                 throws java.lang.IllegalStateException,
                                        java.io.IOException</PRE>
<DL>
<DD>Connects to the Wii Remote with the specified bluetooth address.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bluetoothAddress</CODE> - the bluetooth address of the remote to connect to. Just a straight up address, no dashes, spaces, etc. Example: 0017AB322D14.
<DT><B>Returns:</B><DD>the WiiRemote with the given bluetooth address.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth.
<DD><CODE>java.io.IOException</CODE> - if there is an error connecting to the remote at given address.</DL>
</DD>
</DL>
<HR>

<A NAME="connectToBalanceBoard(java.lang.String)"><!-- --></A><H3>
connectToBalanceBoard</H3>
<PRE>
public static <A HREF="../wiiremotej/BalanceBoard.html" title="class in wiiremotej">BalanceBoard</A> <B>connectToBalanceBoard</B>(java.lang.String&nbsp;bluetoothAddress)
                                          throws java.lang.IllegalStateException,
                                                 java.io.IOException</PRE>
<DL>
<DD>Connects to the BalanceBoard with the specified bluetooth address.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bluetoothAddress</CODE> - the bluetooth address of the balance baord to connect to. Just a straight up address, no dashes, spaces, etc. Example: 0017AB322D14.
<DT><B>Returns:</B><DD>the BalanceBoard with the given bluetooth address.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth.
<DD><CODE>java.io.IOException</CODE> - if there is an error connecting to the balance board at given address.</DL>
</DD>
</DL>
<HR>

<A NAME="findDevice(int)"><!-- --></A><H3>
findDevice</H3>
<PRE>
public static <A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A> <B>findDevice</B>(int&nbsp;deviceType)
                            throws java.lang.IllegalStateException,
                                   java.lang.InterruptedException,
                                   java.io.IOException</PRE>
<DL>
<DD>Searches for a WiiDevice and pairs with it via Bluetooth. Only does a standard inquiry before giving up. Blocks till inquiry complete.
 The WiiDevice is returned.<br><br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>deviceType</CODE> - the type of device to find. Can be a mask of multiple devices (simply add the devices you want together). See constants in WiiRemoteJ for options.
<DT><B>Returns:</B><DD>a high-level interface to the found device or <code>null</code> if no device matching the deviceType is found.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices were already being found.
<DD><CODE>java.lang.InterruptedException</CODE> - on interruption while waiting for discovery.
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findRemote()"><!-- --></A><H3>
findRemote</H3>
<PRE>
public static <A HREF="../wiiremotej/WiiRemote.html" title="class in wiiremotej">WiiRemote</A> <B>findRemote</B>()
                            throws java.lang.IllegalStateException,
                                   java.lang.InterruptedException,
                                   java.io.IOException</PRE>
<DL>
<DD>Searches for a WiiRemote and pairs with it via Bluetooth. Only does a standard inquiry before giving up. Blocks till inquiry complete.
 The WiiRemote is returned. Convenience method for findDevice(WiiRemoteJ.WII_REMOTE).<br><br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a high-level interface to the found remote or <code>null</code> if no remote is found.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices were already being found.
<DD><CODE>java.lang.InterruptedException</CODE> - on interruption while waiting for discovery.
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findBalanceBoard()"><!-- --></A><H3>
findBalanceBoard</H3>
<PRE>
public static <A HREF="../wiiremotej/BalanceBoard.html" title="class in wiiremotej">BalanceBoard</A> <B>findBalanceBoard</B>()
                                     throws java.lang.IllegalStateException,
                                            java.lang.InterruptedException,
                                            java.io.IOException</PRE>
<DL>
<DD>Searches for a BalanceBoard and pairs with it via Bluetooth. Only does a standard inquiry before giving up. Blocks till inquiry complete.
 The BalanceBoard is returned. Convenience method for findDevice(WiiRemoteJ.BALANCE_BOARD).<br><br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a high-level interface to the found balanceBoard or <code>null</code> if no balance board is found.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices were already being found.
<DD><CODE>java.lang.InterruptedException</CODE> - on interruption while waiting for discovery.
<DD><CODE>java.io.IOException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findDevices(wiiremotej.event.WiiDeviceDiscoveryListener, int)"><!-- --></A><H3>
findDevices</H3>
<PRE>
public static void <B>findDevices</B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
                               int&nbsp;deviceType)
                        throws java.lang.IllegalArgumentException,
                               java.lang.IllegalStateException</PRE>
<DL>
<DD>Searches for WiiDevices indefinitely, until stopFind() is called. Does not block. Devices discovered through this method are passed to the listener specified
 by the user. This method will never pass <code>null</code> to a listener. The time to attach listeners is in 
 WiiDeviceDiscoveryListener's wiiDeviceDiscovered(...) method. Convenience method for findDevices(listener, deviceType, Integer.MAX_VALUE).<br>
 <br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - listens for discovered WiiDevices. Whenever a device is discovered, it will be passed to this listener. Can not be <code>null</code>.<DD><CODE>deviceType</CODE> - the type of device to find. Can be a mask of multiple devices (simply add the devices you want together). See constants in WiiRemoteJ for options.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if listener is null.
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices are already being found.</DL>
</DD>
</DL>
<HR>

<A NAME="findDevices(wiiremotej.event.WiiDeviceDiscoveryListener, int, int)"><!-- --></A><H3>
findDevices</H3>
<PRE>
public static void <B>findDevices</B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
                               int&nbsp;deviceType,
                               int&nbsp;numDevices)
                        throws java.lang.IllegalArgumentException,
                               java.lang.IllegalStateException</PRE>
<DL>
<DD>Searches for WiiDevices until the given number of devices are found or until until stopFind() is called. Does not block. Devices discovered through this method
 are passed to the listener specified by the user. This method will never pass <code>null</code> to a listener. The time to attach listeners is in 
 WiiDeviceDiscoveryListener's wiiDeviceDiscovered(...) method.<br>
 <br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - listens for discovered WiiDevices. Whenever a device is discovered, it will be passed to this listener. Can not be <code>null</code>.<DD><CODE>deviceType</CODE> - the type of device to find. Can be a mask of multiple devices (simply add the devices you want together). See constants in WiiRemoteJ for options.<DD><CODE>numDevices</CODE> - the number of devices to search for.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if listener is null.
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices are already being found.</DL>
</DD>
</DL>
<HR>

<A NAME="findRemotes(wiiremotej.event.WiiDeviceDiscoveryListener)"><!-- --></A><H3>
findRemotes</H3>
<PRE>
public static void <B>findRemotes</B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener)
                        throws java.lang.IllegalArgumentException,
                               java.lang.IllegalStateException</PRE>
<DL>
<DD>Searches for WiiRemotes indefinitely, until stopFind() is called. Does not block. Remotes discovered through this method are passed to the listener specified
 by the user. This method will never pass null to a listener. The time to attach WiiRemoteListeners is in 
 WiiDeviceDiscoveryListener's wiiDeviceDiscovered(...) method. Convenience method for findDevices(listener, WiiRemoteJ.WII_REMOTE).<br>
 <br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - listens for discovered WiiRemotes. Whenever a remote is discovered, it will be passed to this listener. Can not be null.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if listener is null.
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices are already being found.</DL>
</DD>
</DL>
<HR>

<A NAME="findRemotes(wiiremotej.event.WiiDeviceDiscoveryListener, int)"><!-- --></A><H3>
findRemotes</H3>
<PRE>
public static void <B>findRemotes</B>(<A HREF="../wiiremotej/event/WiiDeviceDiscoveryListener.html" title="interface in wiiremotej.event">WiiDeviceDiscoveryListener</A>&nbsp;listener,
                               int&nbsp;numRemotes)
                        throws java.lang.IllegalArgumentException,
                               java.lang.IllegalStateException</PRE>
<DL>
<DD>Searches for WiiRemotes until the given number are found or until stopFind() is called. Does not block. Remotes discovered through this method are passed
 to the listener specified by the user. This method will never pass null to a listener. The time to attach WiiRemoteListeners is in
 WiiDeviceDiscoveryListener's wiiDeviceDiscovered(...) method. Convenience method for findDevices(listener, WiiRemoteJ.WII_REMOTE, numRemotes).<br>
 <br>
 Note that only one "find" method can run at a time. It is the user's responsibility to ensure that the number of Bluetooth devices connected to the machine does not
 exceed the maximum of 7. The results are unspecified if this happens.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - listens for discovered WiiRemotes. Whenever a remote is discovered, it will be passed to this listener. Can not be null.<DD><CODE>numRemotes</CODE> - the number of remotes to search for.
<DT><B>Throws:</B>
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if listener is null.
<DD><CODE>java.lang.IllegalStateException</CODE> - on error intializing Bluetooth or starting inquiry.
<DD><CODE>java.lang.IllegalStateException</CODE> - if devices are already being found.</DL>
</DD>
</DL>
<HR>

<A NAME="stopFind()"><!-- --></A><H3>
stopFind</H3>
<PRE>
public static void <B>stopFind</B>()</PRE>
<DL>
<DD>Cancels a search for multiple devices initiated by findDevices(...). The current inquiry is terminated, and no further inquiries
 will begin until another call to findDevice(), or findDevices(...). If no inquiry is in progress, nothing happens.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isFindInProgress()"><!-- --></A><H3>
isFindInProgress</H3>
<PRE>
public static boolean <B>isFindInProgress</B>()</PRE>
<DL>
<DD>Returns <code>true</code> if a find operation is in progress; otherwise <code>false</code>.
<P>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if a find operation is in progress; otherwise <code>false</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="setConsoleLoggingErrors()"><!-- --></A><H3>
setConsoleLoggingErrors</H3>
<PRE>
public static void <B>setConsoleLoggingErrors</B>()</PRE>
<DL>
<DD>Limits the types of messages output to the console by default to error (warning and severe) messages only. Note that if the Logger level is greater than WARNING, it
 will be changed to WARNING (i.e. if the Logger level is SEVERE, it will be changed to WARNING, but if it is FINE, it will not change).
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setConsoleLoggingAll()"><!-- --></A><H3>
setConsoleLoggingAll</H3>
<PRE>
public static void <B>setConsoleLoggingAll</B>()</PRE>
<DL>
<DD>Outputs all messages to the console by default. Note that the Logger level will be changed to ALL.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setConsoleLoggingOff()"><!-- --></A><H3>
setConsoleLoggingOff</H3>
<PRE>
public static void <B>setConsoleLoggingOff</B>()</PRE>
<DL>
<DD>Outputs no messages to the console by default. The Logger level will not change.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../wiiremotej/WiiRemoteExtensionFactory.html" title="class in wiiremotej"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../wiiremotej/WiiRemoteMouse.html" title="class in wiiremotej"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?wiiremotej/WiiRemoteJ.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="WiiRemoteJ.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
