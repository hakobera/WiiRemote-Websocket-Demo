<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.5.0_16) on Thu Mar 12 12:01:04 EDT 2009 -->
<TITLE>
BalanceBoard
</TITLE>

<META NAME="keywords" CONTENT="wiiremotej.BalanceBoard class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="BalanceBoard";
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../wiiremotej/AnalogStickMouse.html" title="class in wiiremotej"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../wiiremotej/ButtonKeyMap.html" title="class in wiiremotej"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?wiiremotej/BalanceBoard.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BalanceBoard.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
wiiremotej</FONT>
<BR>
Class BalanceBoard</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>wiiremotej.BalanceBoard</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>BalanceBoard</B><DT>extends java.lang.Object<DT>implements <A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></DL>
</PRE>

<P>
A class representing a Nintendo (R) Wii Balance Board (TM). It has commands to control all of the Balance Board features. 
 You can register a BalanceBoardListener with addBalanceBoardListener.<br>
 WiiRemoteJ uses the Java logging API. The log for the package is named "wiiremotej" and can be obtained through the java.util.logging.Logger class.<br>
 <br>
 Note that this document uses the following notation to represent hexadecimal numbers: 0x--. A hexadecimal number is simply a number in base-16. This convention is used
 because it is easier to represent a single unsigned byte (256 in decimal) in hexadecimal: 0xFF.<br>
 <br>
 When the balance board is disconnected (either via the disconnect() method or by an action from the board), the board clears pointers to all variables to free up
 memory. Do not try to get status of the lights or any other information from the balance board after it has disconnected, as you will probably end up throwing. 
 NullPointerExceptions. The only methods guaranteed to work after the board has been disconnected are the isConnected() method (will always return <code>false</code>)
 and the getBluetoothAddress() method.
<P>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#I_EXTENSION">I_EXTENSION</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Input channel for button information (2 byte payload) and extension information (8 byte payload).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#I_EXTENSION2">I_EXTENSION2</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Input channel for button information (2 byte payload) and extension information (19 byte payload).</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#BalanceBoard(wiiremotej.MassConstants)">BalanceBoard</A></B>(<A HREF="../wiiremotej/MassConstants.html" title="class in wiiremotej">MassConstants</A>&nbsp;massConstants)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a blank Balance BOard that is not connected to an actual Board using the passed in parameters.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#addBalanceBoardListener(wiiremotej.event.BalanceBoardListener)">addBalanceBoardListener</A></B>(<A HREF="../wiiremotej/event/BalanceBoardListener.html" title="interface in wiiremotej.event">BalanceBoardListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the specified BalanceBoardListener to this BalanceBoard.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#disconnect()">disconnect</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disconnects from the Balance Board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;other)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compares BalanceBoards based on their bluetooth addresses.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#getBluetoothAddress()">getBluetoothAddress</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the bluetooth address of the Balance Board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#getInputReport()">getInputReport</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the input report the balance board is currently using to receive data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../wiiremotej/MassConstants.html" title="class in wiiremotej">MassConstants</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#getMassConstants()">getMassConstants</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the mass constants located on the Balance Board.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#isConnected()">isConnected</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if connected to the Balance Board; otherwise <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#isLEDIlluminated()">isLEDIlluminated</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if the LED is illuminated; otherwise <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#isReadingData()">isReadingData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if reading data; otherwise <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#isWritingData()">isWritingData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns <code>true</code> if writing data; otherwise <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#readData(byte[], byte[], int, int)">readData</A></B>(byte[]&nbsp;address,
         byte[]&nbsp;buffer,
         int&nbsp;firstIndex,
         int&nbsp;numBytes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads data from the Balance Board at the specified address.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#readData(byte[], int)">readData</A></B>(byte[]&nbsp;address,
         int&nbsp;numBytes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reads data from the Balance Board at the specified address.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#removeBalanceBoardListener(wiiremotej.event.BalanceBoardListener)">removeBalanceBoardListener</A></B>(<A HREF="../wiiremotej/event/BalanceBoardListener.html" title="interface in wiiremotej.event">BalanceBoardListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the specified BalanceBoardListener from this BalanceBoard.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#requestStatus()">requestStatus</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Requests status of the Balance Board, including battery level, LED status, etc.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#setLEDIlluminated(boolean)">setLEDIlluminated</A></B>(boolean&nbsp;illuminated)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the LED light to illuminated, where <code>true</code> is on and <code>false</code> is off.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#waitForDataReadCompletion()">waitForDataReadCompletion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../wiiremotej/BalanceBoard.html#writeData(byte[], byte[])">writeData</A></B>(byte[]&nbsp;address,
          byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Writes data to the BalanceBoard at the specified address.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="I_EXTENSION"><!-- --></A><H3>
I_EXTENSION</H3>
<PRE>
public static final byte <B>I_EXTENSION</B></PRE>
<DL>
<DD>Input channel for button information (2 byte payload) and extension information (8 byte payload).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#wiiremotej.BalanceBoard.I_EXTENSION">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="I_EXTENSION2"><!-- --></A><H3>
I_EXTENSION2</H3>
<PRE>
public static final byte <B>I_EXTENSION2</B></PRE>
<DL>
<DD>Input channel for button information (2 byte payload) and extension information (19 byte payload).
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#wiiremotej.BalanceBoard.I_EXTENSION2">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="BalanceBoard(wiiremotej.MassConstants)"><!-- --></A><H3>
BalanceBoard</H3>
<PRE>
public <B>BalanceBoard</B>(<A HREF="../wiiremotej/MassConstants.html" title="class in wiiremotej">MassConstants</A>&nbsp;massConstants)</PRE>
<DL>
<DD>Constructs a blank Balance BOard that is not connected to an actual Board using the passed in parameters.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>massConstants</CODE> - information used in interpreting the Balance Board's mass sensor data.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="requestStatus()"><!-- --></A><H3>
requestStatus</H3>
<PRE>
public void <B>requestStatus</B>()
                   throws java.io.IOException</PRE>
<DL>
<DD>Requests status of the Balance Board, including battery level, LED status, etc. Note that status is not returned, but sent to a BBStatusEvent.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an error sending data to the Balance Board.</DL>
</DD>
</DL>
<HR>

<A NAME="setLEDIlluminated(boolean)"><!-- --></A><H3>
setLEDIlluminated</H3>
<PRE>
public void <B>setLEDIlluminated</B>(boolean&nbsp;illuminated)
                       throws java.lang.IllegalArgumentException,
                              java.io.IOException</PRE>
<DL>
<DD>Sets the LED light to illuminated, where <code>true</code> is on and <code>false</code> is off.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>illuminated</CODE> - if <code>true</code>, turns the light on; otherwise, turns the light off.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an error sending data to the Balance Board.
<DD><CODE>java.lang.IllegalArgumentException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="writeData(byte[], byte[])"><!-- --></A><H3>
writeData</H3>
<PRE>
public void <B>writeData</B>(byte[]&nbsp;address,
                      byte[]&nbsp;data)
               throws java.io.IOException,
                      java.lang.IllegalArgumentException,
                      java.lang.InterruptedException</PRE>
<DL>
<DD>Writes data to the BalanceBoard at the specified address. Note that only one data write operation can occur at a time.
 If data is already being written,
 this method will block until the data write is finished. You can check if data is being written with isWritingData().
 Also note that you can not read and write simultaneously.
 If you try, your read will block until your write is finished and vice versa.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>address</CODE> - the address to write to. Must be 4 bytes. The first byte of the address indicates whether to write to memory (0x00) or registers (0x04).<DD><CODE>data</CODE> - the data to write. Must be between 1 and 16 bytes in length.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an error sending data to the Wii Remote.
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if address is not 4 bytes long.
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if data.length is not between 1 and 16.
<DD><CODE>java.lang.InterruptedException</CODE><DT><B>See Also:</B><DD><A HREF="../wiiremotej/BalanceBoard.html#isWritingData()"><CODE>isWritingData()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="readData(byte[], int)"><!-- --></A><H3>
readData</H3>
<PRE>
public byte[] <B>readData</B>(byte[]&nbsp;address,
                       int&nbsp;numBytes)
                throws java.io.IOException,
                       java.lang.IllegalArgumentException,
                       java.lang.IllegalStateException,
                       java.lang.InterruptedException</PRE>
<DL>
<DD>Reads data from the Balance Board at the specified address.
 Only one data read operation can happen at a time. If you try to read data twice at the same time,
 the second read will block until the first is finished. Therefore, there is no guarantee of the data being read immediately when calling this method.
 The only way you can guarantee immediate execution of a call to this
 method is to check isReadingData() immediately before calling it; even then, there is a slight chance one of your methods could call readData
 between the time you call isReadingData() and readData. This method blocks until the specified amount of data has been read or an exception is thrown.
 Also note that you can not read and write simultaneously.
 If you try, your read will block until your write is finished and vice versa.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>address</CODE> - the address to read from. Must be 4 bytes.
 The first byte of the address indicates whether to read from memory (0x00) or registers (0x04).<DD><CODE>numBytes</CODE> - the length of the data to read (in bytes).
<DT><B>Returns:</B><DD>a byte array of length numBytes containing all of the data read.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an error sending data to the Wii Remote.
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if address is not 4 bytes in length or if numBytes is less than 1.
<DD><CODE>java.io.IOException</CODE> - if there is an error reading the data. See WRDataEvent constant field values for details.
<DD><CODE>java.lang.InterruptedException</CODE> - if interrupted waiting for the data read to complete.
<DD><CODE>java.lang.IllegalStateException</CODE><DT><B>See Also:</B><DD><A HREF="../wiiremotej/BalanceBoard.html#isReadingData()"><CODE>isReadingData()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="readData(byte[], byte[], int, int)"><!-- --></A><H3>
readData</H3>
<PRE>
public int <B>readData</B>(byte[]&nbsp;address,
                    byte[]&nbsp;buffer,
                    int&nbsp;firstIndex,
                    int&nbsp;numBytes)
             throws java.io.IOException,
                    java.lang.IllegalArgumentException,
                    java.lang.IllegalStateException,
                    java.lang.InterruptedException</PRE>
<DL>
<DD>Reads data from the Balance Board at the specified address. Only one data read can happen at a time. If you try to read data twice at the same time,
 the second read will block until the first is finished. Therefore, there is no guarantee of the data being read immediately when calling this method.
 The only way you can guarantee immediate execution of a call to this
 method is to check isReadingData() immediately before calling it; even then, there is a slight chance one of your methods could call readData
 between the time you call isReadingData() and readData. This method blocks until the specified amount of data has been read or an exception is thrown.
 Also note that you can not read and write simultaneously.
 If you try, your read will block until your write is finished and vice versa.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>address</CODE> - the address to read from. Must be 4 bytes.
 The first byte of the address indicates whether to read from memory (0x00) or registers (0x04).<DD><CODE>buffer</CODE> - the array to read data into.<DD><CODE>firstIndex</CODE> - the first index of buffer to add data to.<DD><CODE>numBytes</CODE> - the length of the data to read (in bytes). Must be between 1 and 65535 (0xFFFF).
<DT><B>Returns:</B><DD>the number of bytes read.
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there is an error sending data to the Wii Remote.
<DD><CODE>java.lang.IllegalArgumentException</CODE> - if address is not 4 bytes in length or if numBytes is less than 1 or greater than 65535 (0xFFFF).
<DD><CODE>java.io.IOException</CODE> - if there is an error reading the data. See WRDataEvent constant field values for details.
<DD><CODE>java.lang.InterruptedException</CODE> - if interrupted waiting for the data read to complete.
<DD><CODE>java.lang.IllegalStateException</CODE><DT><B>See Also:</B><DD><A HREF="../wiiremotej/BalanceBoard.html#isReadingData()"><CODE>isReadingData()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="waitForDataReadCompletion()"><!-- --></A><H3>
waitForDataReadCompletion</H3>
<PRE>
<FONT SIZE="-1">@Deprecated
</FONT>public void <B>waitForDataReadCompletion</B>()
                               throws java.lang.InterruptedException</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;
<P>
<DD>Deprecated. Does nothing.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.InterruptedException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="disconnect()"><!-- --></A><H3>
disconnect</H3>
<PRE>
public void <B>disconnect</B>()</PRE>
<DL>
<DD>Disconnects from the Balance Board. If the Balance Board is already disconnected, no action is taken and no exceptions are thrown. Note that the
 BalanceBoardListeners' disconnected() method will NOT be called.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../wiiremotej/WiiDevice.html#disconnect()">disconnect</A></CODE> in interface <CODE><A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isConnected()"><!-- --></A><H3>
isConnected</H3>
<PRE>
public boolean <B>isConnected</B>()</PRE>
<DL>
<DD>Returns <code>true</code> if connected to the Balance Board; otherwise <code>false</code>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../wiiremotej/WiiDevice.html#isConnected()">isConnected</A></CODE> in interface <CODE><A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if connected to the Balance Board; otherwise <code>false</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="isReadingData()"><!-- --></A><H3>
isReadingData</H3>
<PRE>
public boolean <B>isReadingData</B>()</PRE>
<DL>
<DD>Returns <code>true</code> if reading data; otherwise <code>false</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if reading data; otherwise <code>false</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="isWritingData()"><!-- --></A><H3>
isWritingData</H3>
<PRE>
public boolean <B>isWritingData</B>()</PRE>
<DL>
<DD>Returns <code>true</code> if writing data; otherwise <code>false</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if writing data; otherwise <code>false</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="isLEDIlluminated()"><!-- --></A><H3>
isLEDIlluminated</H3>
<PRE>
public boolean <B>isLEDIlluminated</B>()</PRE>
<DL>
<DD>Returns <code>true</code> if the LED is illuminated; otherwise <code>false</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if the LED is illuminated; otherwise <code>false</code>.</DL>
</DD>
</DL>
<HR>

<A NAME="getMassConstants()"><!-- --></A><H3>
getMassConstants</H3>
<PRE>
public <A HREF="../wiiremotej/MassConstants.html" title="class in wiiremotej">MassConstants</A> <B>getMassConstants</B>()</PRE>
<DL>
<DD>Returns the mass constants located on the Balance Board. These values can be used to convert raw balance board data into kilograms.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the mass constants located on the Balance Board.</DL>
</DD>
</DL>
<HR>

<A NAME="getInputReport()"><!-- --></A><H3>
getInputReport</H3>
<PRE>
public byte <B>getInputReport</B>()</PRE>
<DL>
<DD>Returns the input report the balance board is currently using to receive data.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the input report the balance board is currently using to receive data.</DL>
</DD>
</DL>
<HR>

<A NAME="addBalanceBoardListener(wiiremotej.event.BalanceBoardListener)"><!-- --></A><H3>
addBalanceBoardListener</H3>
<PRE>
public void <B>addBalanceBoardListener</B>(<A HREF="../wiiremotej/event/BalanceBoardListener.html" title="interface in wiiremotej.event">BalanceBoardListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds the specified BalanceBoardListener to this BalanceBoard. If the specified listener is null, no action is taken.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - the listener to add.</DL>
</DD>
</DL>
<HR>

<A NAME="removeBalanceBoardListener(wiiremotej.event.BalanceBoardListener)"><!-- --></A><H3>
removeBalanceBoardListener</H3>
<PRE>
public void <B>removeBalanceBoardListener</B>(<A HREF="../wiiremotej/event/BalanceBoardListener.html" title="interface in wiiremotej.event">BalanceBoardListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the specified BalanceBoardListener from this BalanceBoard. If the specified listener was not previously added or is null, no action is taken.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - the listener to remove.</DL>
</DD>
</DL>
<HR>

<A NAME="getBluetoothAddress()"><!-- --></A><H3>
getBluetoothAddress</H3>
<PRE>
public java.lang.String <B>getBluetoothAddress</B>()</PRE>
<DL>
<DD>Returns the bluetooth address of the Balance Board. This information persists even after the balance board has been disconnected.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../wiiremotej/WiiDevice.html#getBluetoothAddress()">getBluetoothAddress</A></CODE> in interface <CODE><A HREF="../wiiremotej/WiiDevice.html" title="interface in wiiremotej">WiiDevice</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the bluetooth address of this Balance Board.</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <B>equals</B>(java.lang.Object&nbsp;other)</PRE>
<DL>
<DD>Compares BalanceBoards based on their bluetooth addresses.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>equals</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if the BalanceBoards are the same (have the same Bluetooth address); otherwise <code>false</code>.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../wiiremotej/AnalogStickMouse.html" title="class in wiiremotej"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../wiiremotej/ButtonKeyMap.html" title="class in wiiremotej"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?wiiremotej/BalanceBoard.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BalanceBoard.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
